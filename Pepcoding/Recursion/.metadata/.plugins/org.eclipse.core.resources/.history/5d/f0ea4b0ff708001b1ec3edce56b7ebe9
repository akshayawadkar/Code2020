class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        boolean[][] visited = new boolean[image.length][image[0].length];
        int oldColor = image[sr][sc];
        dfs(image, sr, sc, oldColor, newColor, visited);
        return image;
    }
    private void dfs(int[][] image, int sr, int sc, int oldColor, int newColor, boolean[][] visited){
        
        if(sr < 0 || sr >= image.length
          || sc < 0 || sc >= image[0].length){
            return;
        }
        
        if(image[sr][sc] != oldColor){
            return;
        }
        
        if(visited[sr][sc]){
            return;
        }
        
        if(image[sr][sc] == oldColor){
            image[sr][sc] = newColor;
            visited[sr][sc] = true;
        }
        
         dfs(image, sr + 1, sc, oldColor, newColor, visited);
         dfs(image, sr - 1, sc, oldColor, newColor, visited);
         dfs(image, sr, sc + 1, oldColor, newColor, visited);
         dfs(image, sr, sc - 1, oldColor, newColor, visited);
        
    }
}