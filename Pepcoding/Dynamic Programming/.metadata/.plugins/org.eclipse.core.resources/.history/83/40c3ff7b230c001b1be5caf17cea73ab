
public class _0008_MinJumps_JumpGame_Leetcode {
	public static void main(String[] args) {
		
		int[] arr = {2, 3, 1, 1, 4};
		Long[] dp = new Long[arr.length];
		int minJumpsToReachEnd = (int) solve(arr, 0, dp);
		System.out.println(minJumpsToReachEnd);
		
	}

	private static long solve(int[] arr, int currIdx, Long[] dp) {
		
		if(currIdx >= arr.length) {
			return Integer.MAX_VALUE;
		}
		
		
		if(currIdx == arr.length - 1) {
			return 0;
		}
		
		long min = Integer.MAX_VALUE;
		
		for(int i = 1; i <= arr[currIdx]; i++) {
			min = Math.min(min, 1 + solve(arr, currIdx + i, dp));
		}
		
		return min;
	}
}
