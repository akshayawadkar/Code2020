class Solution {
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for(int i : nums){
            sum += i;
        }
        
        if(sum % 2 != 0){
            return false;
        }
        
        return solve(nums, sum / 2);
    }
    
    private static boolean solve(int[] arr, int sum) {
		
		boolean[][] dp = new boolean[arr.length + 1][sum + 1];
		for(int i = 0; i < dp.length; i++) {
			dp[i][0] = true;
		}
		
		for(int i = 1; i < dp.length; i++) {
			for(int j = 1; j < dp[0].length; j++) {
				if(arr[i - 1] <= j) {
					dp[i][j] = dp[i - 1][j] || dp[i - 1][j - arr[i - 1]];
				}else {
					dp[i][j] = dp[i - 1][j];
				}
			}
		}
		
// 		for(boolean[] a : dp) {
// 			System.out.println(Arrays.toString(a));
// 		}
		
		return dp[dp.length - 1][dp[0].length - 1];
	}
}