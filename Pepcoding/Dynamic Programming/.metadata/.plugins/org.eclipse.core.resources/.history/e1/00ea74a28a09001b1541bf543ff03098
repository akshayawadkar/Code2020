
public class _3_01Knapsack_TopDown {
 
	public static void main(String[] args) {
	
		int[] values = {60, 100, 120};
		int[] weights = {10, 20, 30};
		
		int W = 50;
		
		int n = values.length;
		
		 
		int maxProfit = solve(weights, values, W, n );
		
		System.out.println(maxProfit);
		
	}

	private static int solve(int[] weights, int[] values, int W, int n) {
		
		int[][] dp = new int[n + 1][W + 1];
		
		for(int i = 1; i < dp.length; i++) {
			for(int j = 1; j < dp[0].length; j++) {
				if(weights[i - 1] <= j) {
					dp[i][j] = Math.max(dp[i - 1][j], values[i - 1] + dp[i - 1][j - arr[i - 1]]); 
				}else {
					dp[i][j] = dp[i - 1][j];
				}
			}
		}
		
		return dp[n][W]; 
	}
}
